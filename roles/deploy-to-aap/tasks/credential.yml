---

- name: ensure sendgrid credential exists
  awx.awx.credential:
    name: sendgrid
    description: sendgrid api credential
    credential_type: sendgrid
    organization: Default
    inputs:
      sendgrid_user: "{{ sendgrid_user }}"
      sendgrid_from_email_address: "{{ sendgrid_from_email_address }}"
      sendgrid_api_key: "{{ sendgrid_api_key }}"
    state: present
    controller_host: '{{ controller_host }}'
    controller_username: '{{ controller_username }}'
    controller_password: '{{ controller_password }}'
    validate_certs: '{{ controller_verify_ssl }}'
  register: reg_sendgrid_credential
  until: reg_sendgrid_credential is success
  delay: 3
  retries: 100
  when:
    - sendgrid_user is defined
    - sendgrid_from_email_address is defined
    - sendgrid_api_key is defined

- name: ensure smtp credential exists
  awx.awx.credential:
    name: smtp
    description: smtp credential
    credential_type: smtp
    organization: Default
    inputs:
      smtp_account: "{{ smtp_account | default(omit) }}"
      smtp_server_host: "{{ smtp_server_host }}"
      smtp_server_port: "{{ smtp_server_port }}"
      smtp_account_password: "{{ smtp_account_password | default(omit) }}"
      smtp_from_email_address: "{{ smtp_from_email_address | default(omit) }}"
    state: present
    controller_host: '{{ controller_host }}'
    controller_username: '{{ controller_username }}'
    controller_password: '{{ controller_password }}'
    validate_certs: '{{ controller_verify_ssl }}'
  register: reg_smtp_credential
  until: reg_smtp_credential is success
  delay: 3
  retries: 100
  when:
    - smtp_server_host is defined
    - smtp_server_port is defined

- name: create aws windows machine credentials
  awx.awx.credential:
    name: aws-windows-machine
    inputs:
      username: 'Administrator'
      password: "{{ ansible_ssh_password | default(ansible_password) | default(omit) }}"
    credential_type: Machine
    organization: Default
    state: present
    controller_host: '{{ controller_host }}'
    controller_username: '{{ controller_username }}'
    controller_password: '{{ controller_password }}'
    validate_certs: '{{ controller_verify_ssl }}'
  register: reg_credential_aws_windows_machine
  until: reg_credential_aws_windows_machine is success
  delay: 3
  retries: 100

- name: create aws credentials
  awx.awx.credential:
    name: aws-demo
    inputs:
      username: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') | default(omit) }}"
      password: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') | default(omit) }}"
      security_token: "{{ lookup('env', 'AWS_SECURITY_TOKEN') | default(omit) }}"
    credential_type: Amazon Web Services
    organization: Default
    state: present
    controller_host: '{{ controller_host }}'
    controller_username: '{{ controller_username }}'
    controller_password: '{{ controller_password }}'
    validate_certs: '{{ controller_verify_ssl }}'
  register: reg_credential_aws_demo
  until: reg_credential_aws_demo is success
  delay: 3
  retries: 100